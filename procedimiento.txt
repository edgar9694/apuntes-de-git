GIT DESDE CERO 01

git config : para configurar las variables de git como el usuario, el correo y el editor que saldra para los commits

git <option> --help // git help <option>: para pedir ayuda de la opcion escogida, abrira una ventana en el navegador con la documentacion completa de esa opcion


GIT DESDE CERO 02

git init : para iniciar el repositorio basico y que crea la carpeta donde se archivaran los cambios.

git add file_name: para agregar a la zona de preparacion.

git add . : agrega todos los archivos que esten en seguimiento o no

git add -A : se agregan todos los archivos que esten en seguimiento solamente

git status: para ver el estado del directorio.

git diff: para ver la diferencia en un archivo cuando este ha sido modificado.

git commit: para agregar al repositorio git.

git log: para poder ver el historial de commits


.gitignore: patrones de nombres de archivos que git ignorara "gitignore.io" pagina que genera dichos patrones


GIT DESDE CERO 03

git rm: para eliminar un archivo

git mv file_from file_to para renombrar un archivo file_from a file_to


git log --oneline: para ver los commits resumidos en una linea cada uno

git log --graph: para ver los commits de cada una de las ramas

git log --pretty=format:"%h - %an, %ar : %s": para darle un formato al historial de commits

git log --all: muestra todos los commits, ideal para cuando se hace checkout y para volver


GIT DESDE CERO 04

git commit --amend: Rehace la confirmacion. Este comando utiliza el área de preparación para la confirmación. Al final terminarás con una sola confirmación - la segunda confirmación reemplaza el resultado de la primera.

git reset HEAD <file>: saca el archivo del area de preparacion.

git checkout -- <file>: elimina las modificaciones que no han pasado al area de preparacion a un archivo

git diff <hash commit1> <hash commit2>: para ver las diferencias entre dos commits

git checkout <hash commit>: nos lleva el proyecto al estado de ese commit


GIT DESDE CERO 04

etiquetas: colocar etiquetas en puntos importantes del historial

git tag: lista las etiquetas en orden alfabetico

etiquetas ligeras: solo apunta a un commit y se crea como git tag <nombre de la etiqueta>. las etiquetas ligeras apuntan a un commit solamente

etiqueta anotada: se guardan en la base de datos de git como objetos enteros, tienen checksum; contienen el  nombre del etiquetador, correo electronico y fecha; y tienen un mensaje asociado.

git tag -a <nombre_etiqueta> -m "mensaje de la etiqueta" <hash_del_commit>

git show <opcion> : muestra la etiqueta o el commit seleccionado

git tag -l "patron": opcion que muestra una lista de las etiquetas con el patron especificado
